{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/bzip2/bzip2.c#415:1#uncompressStream",
            "nobreaks": 1,
            "body": "{\n    BZFILE *bzf;\n    Int32 bzerr, bzerr_dummy, ret, nread, streamNo, i;\n    UChar obuf[5000];\n    UChar unused[5000];\n    Int32 nUnused;\n    void *unusedTmpV;\n    UChar *unusedTmp;\n    nUnused = 0;\n    streamNo = 0;\n    SET_BINARY_MODE(<recovery-expr>());\n    SET_BINARY_MODE(<recovery-expr>());\n    if (ferror(<recovery-expr>()))\n        goto errhandler_io;\n    if (ferror(<recovery-expr>()))\n        goto errhandler_io;\n    while (((Bool)1))\n        {\n            bzf = <recovery-expr>()(&bzerr, <recovery-expr>(), verbosity, (int)smallMode, unused, nUnused);\n            if (<recovery-expr>())\n                goto errhandler;\n            streamNo++;\n            while (bzerr == 0)\n                {\n                    nread = BZ2_bzRead(&bzerr, bzf, obuf, 5000);\n                    if (bzerr == (-5))\n                        goto trycat;\n                    if ((bzerr == 0 || bzerr == 4) && nread > 0)\n                        fwrite(obuf, sizeof(UChar), nread, <recovery-expr>());\n                    if (ferror(<recovery-expr>()))\n                        goto errhandler_io;\n                }\n            if (bzerr != 4)\n                goto errhandler;\n            BZ2_bzReadGetUnused(&bzerr, bzf, &unusedTmpV, &nUnused);\n            if (bzerr != 0)\n                panic(\"decompress:bzReadGetUnused\");\n            unusedTmp = (UChar *)unusedTmpV;\n            for (i = 0; i < nUnused; i++)\n                unused[i] = unusedTmp[i];\n            BZ2_bzReadClose(&bzerr, bzf);\n            if (bzerr != 0)\n                panic(\"decompress:bzReadGetUnused\");\n            if (nUnused == 0 && <recovery-expr>()(<recovery-expr>()))\n                break;\n        }\n  closeok:\n    if (ferror(<recovery-expr>()))\n        goto errhandler_io;\n    if (<recovery-expr>()) {\n        Int32 fd = fileno(<recovery-expr>());\n        if (fd < 0)\n            goto errhandler_io;\n        applySavedFileAttrToOutputFile(fd);\n    }\n    ret = fclose(<recovery-expr>());\n    if (<recovery-expr>())\n        goto errhandler_io;\n    if (ferror(<recovery-expr>()))\n        goto errhandler_io;\n    ret = fflush(<recovery-expr>());\n    if (ret != 0)\n        goto errhandler_io;\n    if (<recovery-expr>()) {\n        ret = fclose(<recovery-expr>());\n        if (<recovery-expr>())\n            goto errhandler_io;\n    }\n    return ((Bool)1);\n  trycat:\n    if (forceOverwrite) {\n        rewind(<recovery-expr>());\n        while (((Bool)1))\n            {\n                if (<recovery-expr>()(<recovery-expr>()))\n                    break;\n                nread = fread(obuf, sizeof(UChar), 5000, <recovery-expr>());\n                if (ferror(<recovery-expr>()))\n                    goto errhandler_io;\n                if (nread > 0)\n                    fwrite(obuf, sizeof(UChar), nread, <recovery-expr>());\n                if (ferror(<recovery-expr>()))\n                    goto errhandler_io;\n            }\n        goto closeok;\n    }\n  errhandler:\n    BZ2_bzReadClose(&bzerr_dummy, bzf);\n    switch (bzerr) {\n      case (-9):\n        configError();\n        break;\n      case (-6):\n      errhandler_io:\n        ioError();\n        break;\n      case (-4):\n        crcError();\n      case (-3):\n        outOfMemory();\n      case (-7):\n        compressedStreamEOF();\n      case (-5):\n        if (<recovery-expr>())\n            fclose(<recovery-expr>());\n        if (<recovery-expr>())\n            fclose(<recovery-expr>());\n        if (streamNo == 1) {\n            return ((Bool)0);\n        } else {\n            return ((Bool)1);\n        }\n      default:\n        panic(\"decompress:unexpected error\");\n    }\n    panic(\"decompress:end\");\n    return ((Bool)1);\n}\n"
        },
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/bzip2/bzip2.c#536:1#testStream",
            "nobreaks": 1,
            "body": "{\n    BZFILE *bzf;\n    Int32 bzerr, bzerr_dummy, ret, streamNo, i;\n    UChar obuf[5000];\n    UChar unused[5000];\n    Int32 nUnused;\n    void *unusedTmpV;\n    UChar *unusedTmp;\n    nUnused = 0;\n    streamNo = 0;\n    SET_BINARY_MODE(<recovery-expr>());\n    if (ferror(<recovery-expr>()))\n        goto errhandler_io;\n    while (((Bool)1))\n        {\n            bzf = <recovery-expr>()(&bzerr, <recovery-expr>(), verbosity, (int)smallMode, unused, nUnused);\n            if (<recovery-expr>())\n                goto errhandler;\n            streamNo++;\n            while (bzerr == 0)\n                {\n                    BZ2_bzRead(&bzerr, bzf, obuf, 5000);\n                    if (bzerr == (-5))\n                        goto errhandler;\n                }\n            if (bzerr != 4)\n                goto errhandler;\n            BZ2_bzReadGetUnused(&bzerr, bzf, &unusedTmpV, &nUnused);\n            if (bzerr != 0)\n                panic(\"test:bzReadGetUnused\");\n            unusedTmp = (UChar *)unusedTmpV;\n            for (i = 0; i < nUnused; i++)\n                unused[i] = unusedTmp[i];\n            BZ2_bzReadClose(&bzerr, bzf);\n            if (bzerr != 0)\n                panic(\"test:bzReadGetUnused\");\n            if (nUnused == 0 && <recovery-expr>()(<recovery-expr>()))\n                break;\n        }\n    if (ferror(<recovery-expr>()))\n        goto errhandler_io;\n    ret = fclose(<recovery-expr>());\n    if (<recovery-expr>())\n        goto errhandler_io;\n    return ((Bool)1);\n  errhandler:\n    BZ2_bzReadClose(&bzerr_dummy, bzf);\n    switch (bzerr) {\n      case (-9):\n        configError();\n        break;\n      case (-6):\n      errhandler_io:\n        ioError();\n        break;\n      case (-4):\n        ;\n        return ((Bool)0);\n      case (-3):\n        outOfMemory();\n      case (-7):\n        ;\n        return ((Bool)0);\n      case (-5):\n        if (<recovery-expr>())\n            fclose(<recovery-expr>());\n        if (streamNo == 1) {\n            return ((Bool)0);\n        } else {\n            return ((Bool)1);\n        }\n      default:\n        panic(\"test:unexpected error\");\n    }\n    panic(\"test:end\");\n    return ((Bool)1);\n}\n"
        }
    ],
    "total": 44,
    "visited": 2
}
