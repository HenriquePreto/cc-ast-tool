{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/deps/lua/src/lgc.c#556:1#singlestep",
            "nobreaks": 1,
            "body": "{\n    global_State *g = (L->l_G);\n    switch (g->gcstate) {\n      case 0:\n        {\n            markroot(L);\n            return 0;\n        }\n      case 1:\n        {\n            if (g->gray)\n                return propagatemark(g);\n            else {\n                atomic(L);\n                return 0;\n            }\n        }\n      case 2:\n        {\n            lu_mem old = g->totalbytes;\n            sweeplist(L, &g->strt.hash[g->sweepstrgc++], ((lu_mem)(~(lu_mem)0) - 2));\n            if (g->sweepstrgc >= g->strt.size)\n                g->gcstate = 3;\n            ((void)0);\n            g->estimate -= old - g->totalbytes;\n            return 10;\n        }\n      case 3:\n        {\n            lu_mem old = g->totalbytes;\n            g->sweepgc = sweeplist(L, g->sweepgc, 40);\n            if (<recovery-expr>()) {\n                checkSizes(L);\n                g->gcstate = 4;\n            }\n            ((void)0);\n            g->estimate -= old - g->totalbytes;\n            return 40 * 10;\n        }\n      case 4:\n        {\n            if (g->tmudata) {\n                GCTM(L);\n                if (g->estimate > 100)\n                    g->estimate -= 100;\n                return 100;\n            } else {\n                g->gcstate = 0;\n                g->gcdept = 0;\n                return 0;\n            }\n        }\n      default:\n        ((void)0);\n        return 0;\n    }\n}\n"
        }
    ],
    "total": 30,
    "visited": 1
}
