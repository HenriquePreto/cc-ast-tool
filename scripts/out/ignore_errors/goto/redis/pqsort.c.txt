{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/pqsort.c#98:1#_pqsort",
            "gotos": 1,
            "labels": 1,
            "body": "{\n    char *pa, *pb, *pc, *pd, *pl, *pm, *pn;\n    int swaptype, cmp_result;\n  loop:\n    ;\n    ;\n    if (<recovery-expr>() < 7) {\n        for (pm = (char *)a + <recovery-expr>(); pm < (char *)a + <recovery-expr>() * <recovery-expr>(); pm += <recovery-expr>())\n            for (pl = pm; pl > (char *)a && cmp(pl - <recovery-expr>(), pl) > 0; pl -= <recovery-expr>())\n                if (swaptype == 0) {\n                    long t = *(long *)(void *)(pl);\n                    *(long *)(void *)(pl) = *(long *)(void *)(pl - <recovery-expr>());\n                    *(long *)(void *)(pl - <recovery-expr>()) = t;\n                } else\n                    swapfunc(pl, pl - <recovery-expr>(), <recovery-expr>(), swaptype);\n        return;\n    }\n    pm = (char *)a + (<recovery-expr>() / 2) * <recovery-expr>();\n    if (<recovery-expr>() > 7) {\n        pl = (char *)a;\n        pn = (char *)a + (<recovery-expr>() - 1) * <recovery-expr>();\n        if (<recovery-expr>() > 40) {\n        }\n        pm = med3(pl, pm, pn, cmp);\n    }\n    if (swaptype == 0) {\n        long t = *(long *)(void *)(a);\n        *(long *)(void *)(a) = *(long *)(void *)(pm);\n        *(long *)(void *)(pm) = t;\n    } else\n        swapfunc(a, pm, <recovery-expr>(), swaptype);\n    pa = pb = (char *)a + <recovery-expr>();\n    pc = pd = (char *)a + (<recovery-expr>() - 1) * <recovery-expr>();\n    for (;;) {\n        while (pb <= pc && (cmp_result = cmp(pb, a)) <= 0)\n            {\n                if (cmp_result == 0) {\n                    if (swaptype == 0) {\n                        long t = *(long *)(void *)(pa);\n                        *(long *)(void *)(pa) = *(long *)(void *)(pb);\n                        *(long *)(void *)(pb) = t;\n                    } else\n                        swapfunc(pa, pb, <recovery-expr>(), swaptype);\n                    pa += <recovery-expr>();\n                }\n                pb += <recovery-expr>();\n            }\n        while (pb <= pc && (cmp_result = cmp(pc, a)) >= 0)\n            {\n                if (cmp_result == 0) {\n                    if (swaptype == 0) {\n                        long t = *(long *)(void *)(pc);\n                        *(long *)(void *)(pc) = *(long *)(void *)(pd);\n                        *(long *)(void *)(pd) = t;\n                    } else\n                        swapfunc(pc, pd, <recovery-expr>(), swaptype);\n                    pd -= <recovery-expr>();\n                }\n                pc -= <recovery-expr>();\n            }\n        if (pb > pc)\n            break;\n        if (swaptype == 0) {\n            long t = *(long *)(void *)(pb);\n            *(long *)(void *)(pb) = *(long *)(void *)(pc);\n            *(long *)(void *)(pc) = t;\n        } else\n            swapfunc(pb, pc, <recovery-expr>(), swaptype);\n        pb += <recovery-expr>();\n        pc -= <recovery-expr>();\n    }\n    pn = (char *)a + <recovery-expr>() * <recovery-expr>();\n    if (<recovery-expr>()) {\n        void *_l = a, *_r;\n    }\n    if (<recovery-expr>()) {\n        void *_l, *_r;\n        _l = a;\n        if (!((lrange < _l && rrange < _l) || (lrange > _r && rrange > _r)))\n            goto loop;\n    }\n}\n"
        }
    ],
    "total": 4,
    "visited": 1
}
