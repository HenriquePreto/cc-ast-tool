{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/redis-check-rdb.c#192:1#redis_check_rdb",
            "gotos": 24,
            "labels": 2,
            "body": "{\n    int selected_dbid = -1;\n    int type, rdbver;\n    char buf[1024];\n    long long expiretime, now = mstime();\n    static rio rdb;\n    struct stat sb;\n    int closefile;\n    if (<recovery-expr>())\n        return 1;\n    if (fstat(fileno(<recovery-expr>()), &<recovery-expr>()) == -1)\n        <recovery-expr>().st_size = 0;\n    startLoadingFile(<recovery-expr>().st_size, rdbfilename, 0);\n    <recovery-expr>()(&rdb, <recovery-expr>());\n    rdbstate.rio = &rdb;\n    rdb.update_cksum = rdbLoadProgressCallback;\n    if (<recovery-expr>()(&rdb, buf, 9) == 0)\n        goto eoferr;\n    buf[9] = '\\x00';\n    if (memcmp(buf, \"REDIS\", 5) != 0) {\n        rdbCheckError(\"Wrong signature trying to load DB from file\");\n        goto err;\n    }\n    rdbver = atoi(buf + 5);\n    if (rdbver < 1 || rdbver > 10) {\n        rdbCheckError(\"Can't handle RDB format version %d\", rdbver);\n        goto err;\n    }\n    expiretime = -1;\n    while (1)\n        {\n            robj *key, *val;\n            rdbstate.doing = 1;\n            if ((type = rdbLoadType(&rdb)) == -1)\n                goto eoferr;\n            if (type == 253) {\n                rdbstate.doing = 2;\n                expiretime = <recovery-expr>()(&rdb);\n                expiretime *= 1000;\n                if (rioGetReadError(&rdb))\n                    goto eoferr;\n                continue;\n            } else if (type == 252) {\n                rdbstate.doing = 2;\n                expiretime = rdbLoadMillisecondTime(&rdb, rdbver);\n                if (rioGetReadError(&rdb))\n                    goto eoferr;\n                continue;\n            } else if (type == 249) {\n                if (<recovery-expr>())\n                    goto eoferr;\n                continue;\n            } else if (type == 248) {\n                if (<recovery-expr>())\n                    goto eoferr;\n                continue;\n            } else if (type == 255) {\n                break;\n            } else if (type == 254) {\n                rdbstate.doing = 6;\n                if (<recovery-expr>())\n                    goto eoferr;\n                continue;\n            } else if (type == 251) {\n                rdbstate.doing = 6;\n                if (<recovery-expr>())\n                    goto eoferr;\n                if (<recovery-expr>())\n                    goto eoferr;\n                continue;\n            } else if (type == 250) {\n                robj *auxkey, *auxval;\n                rdbstate.doing = 7;\n                if (<recovery-expr>())\n                    goto eoferr;\n                if (<recovery-expr>()) {\n                    decrRefCount(auxkey);\n                    goto eoferr;\n                }\n                rdbCheckInfo(\"AUX FIELD %s = '%s'\", (char *)auxkey->ptr, (char *)auxval->ptr);\n                decrRefCount(auxkey);\n                decrRefCount(auxval);\n                continue;\n            } else if (type == 247) {\n                rdbstate.doing = 8;\n                if (<recovery-expr>())\n                    goto eoferr;\n                if (<recovery-expr>())\n                    goto eoferr;\n                if (<recovery-expr>())\n                    goto eoferr;\n                if (<recovery-expr>()) {\n                    rdbCheckError(\"bad when_opcode\");\n                    goto err;\n                }\n                char name[10];\n                rdbCheckInfo(\"MODULE AUX for: %s\", name);\n                robj *o = rdbLoadCheckModuleValue(&rdb, name);\n                decrRefCount(o);\n                continue;\n            } else if (type == 246) {\n                rdbCheckError(\"Pre-release function format not supported %d\", rdbver);\n                goto err;\n            } else if (type == 245) {\n                sds err;\n                rdbstate.doing = 9;\n                if (<recovery-expr>()) {\n                    rdbCheckError(\"Failed loading library, %s\", err);\n                    sdsfree(err);\n                    goto err;\n                }\n                continue;\n            } else {\n                if (!(((type) >= 0 && (type) <= 7) || ((type) >= 9 && (type) <= 19))) {\n                    rdbCheckError(\"Invalid object type: %d\", type);\n                    goto err;\n                }\n                rdbstate.key_type = type;\n            }\n            rdbstate.doing = 3;\n            if (<recovery-expr>())\n                goto eoferr;\n            rdbstate.key = key;\n            rdbstate.keys++;\n            rdbstate.doing = 4;\n            if (<recovery-expr>())\n                goto eoferr;\n            if (expiretime != -1 && expiretime < now)\n                rdbstate.already_expired++;\n            if (expiretime != -1)\n                rdbstate.expires++;\n            decrRefCount(key);\n            decrRefCount(val);\n            rdbstate.key_type = -1;\n            expiretime = -1;\n        }\n    if (rdbver >= 5 && server.rdb_checksum) {\n        rdbstate.doing = 5;\n        if (<recovery-expr>())\n            goto eoferr;\n        ((void)(0));\n        if (<recovery-expr>()) {\n            rdbCheckInfo(\"RDB file was saved with checksum disabled: no check performed.\");\n        } else if (<recovery-expr>()) {\n            rdbCheckError(\"RDB CRC error\");\n            goto err;\n        } else {\n            rdbCheckInfo(\"Checksum OK\");\n        }\n    }\n    if (closefile)\n        fclose(<recovery-expr>());\n    stopLoading(1);\n    return 0;\n  eoferr:\n    if (rdbstate.error_set) {\n        rdbCheckError(rdbstate.error);\n    } else {\n        rdbCheckError(\"Unexpected EOF reading RDB file\");\n    }\n  err:\n    if (closefile)\n        fclose(<recovery-expr>());\n    stopLoading(0);\n    return 1;\n}\n"
        }
    ],
    "total": 59,
    "visited": 1
}
