{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c#1746:1#getKeysUsingKeySpecs",
            "gotos": 6,
            "labels": 1,
            "body": "{\n    int j, i, k = 0, last, first, step;\n    keyReference *keys;\n    for (j = 0; j < cmd->key_specs_num; j++) {\n        keySpec *spec = cmd->key_specs + j;\n        ((spec->begin_search_type != KSPEC_BS_INVALID) ? (void)0 : (_serverAssert(\"spec->begin_search_type != KSPEC_BS_INVALID\", \"/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c\", 1752) , __builtin_unreachable()));\n        if ((<recovery-expr>(spec) & (1ULL << 8)) && !(search_flags & (1 << 0))) {\n            continue;\n        }\n        first = 0;\n        if (spec->begin_search_type == KSPEC_BS_INDEX) {\n            first = spec->bs.index.pos;\n        } else if (spec->begin_search_type == KSPEC_BS_KEYWORD) {\n            int start_index = spec->bs.keyword.startfrom > 0 ? spec->bs.keyword.startfrom : argc + spec->bs.keyword.startfrom;\n            int end_index = spec->bs.keyword.startfrom > 0 ? argc - 1 : 1;\n            for (i = start_index; i != end_index; i = start_index <= end_index ? i + 1 : i - 1) {\n                if (i >= argc || i < 1)\n                    break;\n                if (!strcasecmp((char *)argv[i]->ptr, spec->bs.keyword.keyword)) {\n                    first = i + 1;\n                    break;\n                }\n            }\n            if (!first) {\n                continue;\n            }\n        } else {\n            goto invalid_spec;\n        }\n        if (spec->find_keys_type == KSPEC_FK_RANGE) {\n            step = spec->fk.range.keystep;\n            if (spec->fk.range.lastkey >= 0) {\n                last = first + spec->fk.range.lastkey;\n            } else {\n                if (!spec->fk.range.limit) {\n                    last = argc + spec->fk.range.lastkey;\n                } else {\n                    ((spec->fk.range.lastkey == -1) ? (void)0 : (_serverAssert(\"spec->fk.range.lastkey == -1\", \"/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c\", 1789) , __builtin_unreachable()));\n                    last = first + ((argc - first) / spec->fk.range.limit + spec->fk.range.lastkey);\n                }\n            }\n        } else if (spec->find_keys_type == KSPEC_FK_KEYNUM) {\n            step = spec->fk.keynum.keystep;\n            long long numkeys;\n            if (spec->fk.keynum.keynumidx >= argc)\n                goto invalid_spec;\n            sds keynum_str = argv[first + spec->fk.keynum.keynumidx]->ptr;\n            if (!<recovery-expr>()(keynum_str, <recovery-expr>()(keynum_str), &numkeys) || numkeys < 0) {\n                goto invalid_spec;\n            }\n            first += spec->fk.keynum.firstkey;\n            last = first + (int)numkeys - 1;\n        } else {\n            goto invalid_spec;\n        }\n        int count = ((last - first) + 1);\n        keys = getKeysPrepareResult(result, count);\n        if (last >= argc || last < first || first >= argc) {\n            goto invalid_spec;\n        }\n        for (i = first; i <= last; i += step) {\n            if (i >= argc || i < first) {\n                if (<recovery-expr>(cmd) & (1ULL << 3) || cmd->arity < 0) {\n                    continue;\n                } else {\n                    _serverPanic(\"/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c\", 1831, \"Redis built-in command declared keys positions not matching the arity requirements.\") , __builtin_unreachable();\n                }\n            }\n            keys[k].pos = i;\n            keys[k++].flags = <recovery-expr>(spec);\n        }\n        if (<recovery-expr>(spec) & (1ULL << 9)) {\n            goto invalid_spec;\n        }\n        continue;\n      invalid_spec:\n        if (search_flags & (1 << 1)) {\n            continue;\n        } else {\n            result->numkeys = 0;\n            return -1;\n        }\n    }\n    result->numkeys = k;\n    return k;\n}\n"
        },
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c#824:1#scanGenericCommand",
            "gotos": 3,
            "labels": 1,
            "body": "{\n    int i, j;\n    list *keys = listCreate();\n    listNode *node, *nextnode;\n    long count = 10;\n    sds pat;\n    sds typename;\n    int patlen = 0, use_pattern = 0;\n    dict *ht;\n    while (i < c->argc)\n        {\n            j = c->argc - i;\n            if (!strcasecmp(c->argv[i]->ptr, \"count\") && j >= 2) {\n                if (<recovery-expr>()) {\n                    goto cleanup;\n                }\n                if (count < 1) {\n                    addReplyErrorObject(c, shared.syntaxerr);\n                    goto cleanup;\n                }\n                i += 2;\n            } else if (!strcasecmp(c->argv[i]->ptr, \"match\") && j >= 2) {\n                pat = c->argv[i + 1]->ptr;\n                patlen = <recovery-expr>()(pat);\n                use_pattern = !(patlen == 1 && pat[0] == '*');\n                i += 2;\n            } else if (<recovery-expr>()) {\n                typename = c->argv[i + 1]->ptr;\n                i += 2;\n            } else {\n                addReplyErrorObject(c, shared.syntaxerr);\n                goto cleanup;\n            }\n        }\n    if (<recovery-expr>()) {\n        ht = c->db->dict;\n    } else if (o->type == 2 && o->encoding == 2) {\n        ht = o->ptr;\n    } else if (o->type == 4 && o->encoding == 2) {\n        ht = o->ptr;\n        count *= 2;\n    } else if (o->type == 3 && o->encoding == 7) {\n        zset *zs = o->ptr;\n        ht = zs->dict;\n        count *= 2;\n    }\n    if (ht) {\n        void *privdata[2];\n        long maxiterations = count * 10;\n        privdata[0] = keys;\n        privdata[1] = o;\n        do {\n        } while (cursor && maxiterations-- && ((keys)->len) < (unsigned long)count);\n    } else if (o->type == 2) {\n        int pos = 0;\n        cursor = 0;\n    } else if (o->type == 4 || o->type == 3) {\n        unsigned char *p = lpFirst(o->ptr);\n        unsigned char *vstr;\n        unsigned char intbuf[21];\n        while (p)\n            {\n                p = lpNext(o->ptr, p);\n            }\n        cursor = 0;\n    } else {\n        _serverPanic(\"/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c\", 938, \"Not handled encoding in SCAN.\") , __builtin_unreachable();\n    }\n    node = ((keys)->head);\n    while (node)\n        {\n            robj *kobj = ((node)->value);\n            nextnode = ((node)->next);\n            int filter = 0;\n            if (use_pattern) {\n                if ((kobj->encoding == 0 || kobj->encoding == 8)) {\n                    if (!stringmatchlen(pat, patlen, kobj->ptr, <recovery-expr>()(kobj->ptr), 0))\n                        filter = 1;\n                } else {\n                    char buf[21];\n                    int len;\n                    ((kobj->encoding == 1) ? (void)0 : (_serverAssert(\"kobj->encoding == OBJ_ENCODING_INT\", \"/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c\", 957) , __builtin_unreachable()));\n                    len = <recovery-expr>()(buf, sizeof (buf), (long)kobj->ptr);\n                    if (!stringmatchlen(pat, patlen, buf, len, 0))\n                        filter = 1;\n                }\n            }\n            if (<recovery-expr>()) {\n                robj *typecheck = lookupKeyReadWithFlags(c->db, kobj, (1 << 0));\n                char *type = getObjectTypeName(typecheck);\n                if (strcasecmp((char *)typename, type))\n                    filter = 1;\n            }\n            if (<recovery-expr>())\n                filter = 1;\n            if (filter) {\n                decrRefCount(kobj);\n                listDelNode(keys, node);\n            }\n            if (o && (o->type == 3 || o->type == 4)) {\n                node = nextnode;\n                ((node) ? (void)0 : (_serverAssert(\"node\", \"/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/db.c\", 984) , __builtin_unreachable()));\n                nextnode = ((node)->next);\n                if (filter) {\n                    kobj = ((node)->value);\n                    decrRefCount(kobj);\n                    listDelNode(keys, node);\n                }\n            }\n            node = nextnode;\n        }\n    addReplyArrayLen(c, 2);\n    addReplyBulkLongLong(c, cursor);\n    addReplyArrayLen(c, ((keys)->len));\n    while (<recovery-expr>())\n        {\n            robj *kobj = ((node)->value);\n            addReplyBulk(c, kobj);\n            decrRefCount(kobj);\n            listDelNode(keys, node);\n        }\n  cleanup:\n    ((keys)->free = (decrRefCountVoid));\n    listRelease(keys);\n}\n"
        }
    ],
    "total": 140,
    "visited": 2
}
