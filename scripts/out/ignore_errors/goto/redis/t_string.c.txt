{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/t_string.c#727:1#lcsCommand",
            "gotos": 5,
            "labels": 1,
            "body": "{\n    long long minmatchlen = 0;\n    sds a, b;\n    int getlen = 0, getidx = 0, withmatchlen = 0;\n    robj *obja, *objb;\n    obja = lookupKeyRead(c->db, c->argv[1]);\n    objb = lookupKeyRead(c->db, c->argv[2]);\n    if ((obja && obja->type != 0) || (objb && objb->type != 0)) {\n        addReplyError(c, \"The specified keys must contain string values\");\n        goto cleanup;\n    }\n    obja = obja ? getDecodedObject(obja) : createStringObject(\"\", 0);\n    objb = objb ? getDecodedObject(objb) : createStringObject(\"\", 0);\n    a = obja->ptr;\n    b = objb->ptr;\n    if (getlen && getidx) {\n        addReplyError(c, \"If you want both the length and indexes, please just use IDX.\");\n        goto cleanup;\n    }\n    if (<recovery-expr>()) {\n        addReplyError(c, \"String too long for LCS\");\n        goto cleanup;\n    }\n    unsigned long long lcssize;\n    unsigned long long lcsalloc;\n    if (<recovery-expr>()) {\n        if (<recovery-expr>()) {\n            addReplyError(c, \"Insufficient memory, transient memory for LCS exceeds proto-max-bulk-len\");\n            goto cleanup;\n        }\n    }\n    if (<recovery-expr>()) {\n        addReplyError(c, \"Insufficient memory, failed allocating transient memory for LCS\");\n        goto cleanup;\n    }\n    sds result;\n    void *arraylenptr;\n    int computelcs = getidx || !getlen;\n    if (getidx) {\n        addReplyMapLen(c, 2);\n        addReplyBulkCString(c, \"matches\");\n        arraylenptr = addReplyDeferredLen(c);\n    }\n    while (<recovery-expr>())\n        {\n            int emit_range = 0;\n            if (<recovery-expr>()) {\n                if (<recovery-expr>()) {\n                } else {\n                    if (<recovery-expr>()) {\n                    } else {\n                        emit_range = 1;\n                    }\n                }\n                if (<recovery-expr>())\n                    emit_range = 1;\n            } else {\n                if (<recovery-expr>())\n                    emit_range = 1;\n            }\n            if (emit_range) {\n                if (<recovery-expr>()) {\n                    if (arraylenptr) {\n                        addReplyArrayLen(c, 2 + withmatchlen);\n                        addReplyArrayLen(c, 2);\n                        addReplyArrayLen(c, 2);\n                    }\n                }\n            }\n        }\n    if (arraylenptr) {\n        addReplyBulkCString(c, \"len\");\n    } else if (getlen) {\n    } else {\n        addReplyBulkSds(c, result);\n    }\n    sdsfree(result);\n  cleanup:\n    if (obja)\n        decrRefCount(obja);\n    if (objb)\n        decrRefCount(objb);\n    return;\n}\n"
        }
    ],
    "total": 78,
    "visited": 1
}
