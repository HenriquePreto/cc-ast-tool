{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/server.c#4134:1#finishShutdown",
            "gotos": 2,
            "labels": 1,
            "body": "{\n    int save = server.shutdown_flags & 1;\n    int nosave = server.shutdown_flags & 2;\n    int force = server.shutdown_flags & 8;\n    listIter replicas_iter;\n    listNode *replicas_list_node;\n    int num_replicas = 0, num_lagging_replicas = 0;\n    listRewind(server.slaves, &replicas_iter);\n    while (<recovery-expr>())\n        {\n            client *replica = ((replicas_list_node)->value);\n            num_replicas++;\n            if (replica->repl_ack_off != server.master_repl_offset) {\n                num_lagging_replicas++;\n                long lag;\n                do {\n                    if (((3) & 255) < server.verbosity)\n                        break;\n                    _serverLog(3, \"Lagging replica %s reported offset %lld behind master, lag=%ld, state=%s.\", replicationGetSlaveName(replica), server.master_repl_offset - replica->repl_ack_off, lag, replstateToString(replica->replstate));\n                } while (0);\n            }\n        }\n    if (num_replicas > 0) {\n        do {\n            if (((2) & 255) < server.verbosity)\n                break;\n            _serverLog(2, \"%d of %d replicas are in sync when shutting down.\", num_replicas - num_lagging_replicas, num_replicas);\n        } while (0);\n    }\n    ldbKillForkedSessions();\n    if (server.child_type == 1) {\n        do {\n            if (((3) & 255) < server.verbosity)\n                break;\n            _serverLog(3, \"There is a child saving an .rdb. Killing it!\");\n        } while (0);\n        killRDBChild();\n        <recovery-expr>()(<recovery-expr>(server), 0);\n    }\n    if (server.child_type == 4) {\n        do {\n            if (((3) & 255) < server.verbosity)\n                break;\n            _serverLog(3, \"There is a module fork child. Killing it!\");\n        } while (0);\n        TerminateModuleForkChild(<recovery-expr>(server), 0);\n    }\n    if (server.child_type == 2) {\n        if (server.aof_state == 2) {\n            if (force) {\n                do {\n                    if (((3) & 255) < server.verbosity)\n                        break;\n                    _serverLog(3, \"Writing initial AOF. Exit anyway.\");\n                } while (0);\n            } else {\n                do {\n                    if (((3) & 255) < server.verbosity)\n                        break;\n                    _serverLog(3, \"Writing initial AOF, can't exit.\");\n                } while (0);\n                goto error;\n            }\n        }\n        do {\n            if (((3) & 255) < server.verbosity)\n                break;\n            _serverLog(3, \"There is a child rewriting the AOF. Killing it!\");\n        } while (0);\n        killAppendOnlyChild();\n    }\n    if (server.aof_state != 0) {\n        do {\n            if (((2) & 255) < server.verbosity)\n                break;\n            _serverLog(2, \"Calling fsync() on the AOF file.\");\n        } while (0);\n        flushAppendOnlyFile(1);\n        if (<recovery-expr>()) {\n            do {\n                if (((3) & 255) < server.verbosity)\n                    break;\n            } while (0);\n        }\n    }\n    if ((server.saveparamslen > 0 && !nosave) || save) {\n        do {\n            if (((2) & 255) < server.verbosity)\n                break;\n            _serverLog(2, \"Saving the final RDB snapshot before exiting.\");\n        } while (0);\n        if (server.supervised_mode == 2)\n            redisCommunicateSystemd(\"STATUS=Saving the final RDB snapshot\\n\");\n        rdbSaveInfo rsi, *rsiptr;\n        rsiptr = rdbPopulateSaveInfo(&rsi);\n        if (rdbSave(0, server.rdb_filename, rsiptr) != 0) {\n            if (force) {\n                do {\n                    if (((3) & 255) < server.verbosity)\n                        break;\n                    _serverLog(3, \"Error trying to save the DB. Exit anyway.\");\n                } while (0);\n            } else {\n                do {\n                    if (((3) & 255) < server.verbosity)\n                        break;\n                    _serverLog(3, \"Error trying to save the DB, can't exit.\");\n                } while (0);\n                if (server.supervised_mode == 2)\n                    redisCommunicateSystemd(\"STATUS=Error trying to save the DB, can't exit.\\n\");\n                goto error;\n            }\n        }\n    }\n    if (server.aof_manifest)\n        aofManifestFree(server.aof_manifest);\n    if (server.daemonize || server.pidfile) {\n        do {\n            if (((2) & 255) < server.verbosity)\n                break;\n            _serverLog(2, \"Removing the pid file.\");\n        } while (0);\n        unlink(server.pidfile);\n    }\n    flushSlavesOutputBuffers();\n    closeListeningSockets(1);\n    if (server.cluster_enabled && server.cluster_config_file_lock_fd != -1) {\n    }\n    do {\n        if (((3) & 255) < server.verbosity)\n            break;\n        _serverLog(3, \"%s is now ready to exit, bye bye...\", server.sentinel_mode ? \"Sentinel\" : \"Redis\");\n    } while (0);\n    return 0;\n  error:\n    do {\n        if (((3) & 255) < server.verbosity)\n            break;\n        _serverLog(3, \"Errors trying to shut down the server. Check the logs for more information.\");\n    } while (0);\n    cancelShutdown();\n    return -1;\n}\n"
        },
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/redis/src/server.c#164:1#serverLogFromHandler",
            "gotos": 6,
            "labels": 1,
            "body": "{\n    int fd;\n    int log_to_stdout = server.logfile[0] == '\\x00';\n    char buf[64];\n    if ((level & 255) < server.verbosity || (log_to_stdout && server.daemonize))\n        return;\n    if (fd == -1)\n        return;\n    <recovery-expr>()(buf, sizeof (buf), getpid());\n    if (write(fd, buf, strlen(buf)) == -1)\n        goto err;\n    if (write(fd, \":signal-handler (\", 17) == -1)\n        goto err;\n    if (write(fd, buf, strlen(buf)) == -1)\n        goto err;\n    if (write(fd, \") \", 2) == -1)\n        goto err;\n    if (write(fd, msg, strlen(msg)) == -1)\n        goto err;\n    if (write(fd, \"\\n\", 1) == -1)\n        goto err;\n  err:\n    if (!log_to_stdout)\n        close(fd);\n}\n"
        }
    ],
    "total": 247,
    "visited": 2
}
