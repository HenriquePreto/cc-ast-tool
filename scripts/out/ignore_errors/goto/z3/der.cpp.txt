{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/z3/src/ast/rewriter/der.cpp#193:1#der_sort_vars",
            "gotos": 2,
            "labels": 1,
            "body": "{\n    <recovery-expr>().reset();\n    _Bool found = false;\n    for (unsigned int i = 0; i < <recovery-expr>().size(); i++) {\n        int *v;\n        int *t;\n        if (<recovery-expr>() == nullptr || has_quantifiers(<recovery-expr>()) || occurs(<recovery-expr>(), <recovery-expr>()))\n            <recovery-expr>()[i] = nullptr;\n        else\n            found = true;\n    }\n    if (!found)\n        return;\n    typedef int frame;\n    int todo;\n    int visiting;\n    int done;\n    unsigned int vidx, num;\n    for (unsigned int i = 0; i < <recovery-expr>().size(); i++) {\n        if (!<recovery-expr>().get(i))\n            continue;\n        int *v;\n        SASSERT(<recovery-expr>()->get_idx() == i);\n        SASSERT(<recovery-expr>().empty());\n        <recovery-expr>().push_back(frame(<recovery-expr>(), 0));\n        while (!<recovery-expr>().empty())\n            {\n              start:\n                frame &fr = <recovery-expr>().back();\n                int *t;\n                if (<recovery-expr>().is_marked(<recovery-expr>())) {\n                    <recovery-expr>().pop_back();\n                    continue;\n                }\n                switch (<recovery-expr>()->get_kind()) {\n                    vidx = to_var(<recovery-expr>())->get_idx();\n                    if (<recovery-expr>(fr) == 0) {\n                        if (<recovery-expr>().get(vidx, nullptr) != nullptr) {\n                            if (<recovery-expr>().is_marked(<recovery-expr>())) {\n                                <recovery-expr>().reset_mark(<recovery-expr>());\n                                <recovery-expr>()[vidx] = nullptr;\n                            } else {\n                                <recovery-expr>().mark(<recovery-expr>());\n                                <recovery-expr>(fr) = 1;\n                                <recovery-expr>().push_back(frame(<recovery-expr>().get(vidx), 0));\n                                goto start;\n                            }\n                        }\n                    } else {\n                        SASSERT(<recovery-expr>(fr) == 1);\n                        if (<recovery-expr>().get(vidx, nullptr) != nullptr) {\n                            <recovery-expr>().reset_mark(<recovery-expr>());\n                            <recovery-expr>().push_back(vidx);\n                        } else {\n                        }\n                    }\n                    <recovery-expr>().mark(<recovery-expr>());\n                    <recovery-expr>().pop_back();\n                    break;\n                    <recovery-expr>(UNREACHABLE);\n                    <recovery-expr>().pop_back();\n                    break;\n                    num = to_app(<recovery-expr>())->get_num_args();\n                    while (<recovery-expr>(fr) < num)\n                        {\n                            int *arg;\n                            <recovery-expr>(fr)++;\n                            if (<recovery-expr>().is_marked(<recovery-expr>()))\n                                continue;\n                            <recovery-expr>().push_back(frame(<recovery-expr>(), 0));\n                            goto start;\n                        }\n                    <recovery-expr>().mark(<recovery-expr>());\n                    <recovery-expr>().pop_back();\n                    break;\n                  default:\n                    <recovery-expr>(UNREACHABLE);\n                    <recovery-expr>().pop_back();\n                    break;\n                }\n            }\n    }\n}\n"
        }
    ],
    "total": 5,
    "visited": 1
}
