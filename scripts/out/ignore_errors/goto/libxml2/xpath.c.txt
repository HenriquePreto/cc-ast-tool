{
    "functions": [
        {
            "id": "/Users/henriquepreto/Desktop/cc-ast-tool/scripts/benchmarks/libxml2/xpath.c#159:1#xmlXPathCmpNodesExt",
            "gotos": 1,
            "labels": 1,
            "body": "{\n    int depth1, depth2;\n    int misc = 0, precedence1 = 0, precedence2 = 0;\n    if (<recovery-expr>())\n        return (-2);\n    if (<recovery-expr>() == <recovery-expr>())\n        return (0);\n    switch (<recovery-expr>()->type) {\n        if (<recovery-expr>()) {\n            if (<recovery-expr>()) {\n                if (<recovery-expr>())\n                    return (1);\n                if (<recovery-expr>())\n                    return (-1);\n            } else\n                goto turtle_comparison;\n        }\n        break;\n        precedence1 = 1;\n        <recovery-expr>() = <recovery-expr>()->parent;\n        misc = 1;\n        break;\n        {\n            if (<recovery-expr>()) {\n                do {\n                    <recovery-expr>() = <recovery-expr>()->prev;\n                    if (<recovery-expr>()) {\n                        precedence1 = 3;\n                        break;\n                    }\n                    if (<recovery-expr>()) {\n                        precedence1 = 2;\n                        <recovery-expr>() = <recovery-expr>()->parent;\n                        break;\n                    }\n                } while (1);\n            } else {\n                precedence1 = 2;\n                <recovery-expr>() = <recovery-expr>()->parent;\n            }\n            if (<recovery-expr>()) {\n                precedence1 = 0;\n            } else\n                misc = 1;\n        }\n        break;\n        return (1);\n      default:\n        break;\n    }\n    switch (<recovery-expr>()->type) {\n        break;\n        precedence2 = 1;\n        <recovery-expr>() = <recovery-expr>()->parent;\n        misc = 1;\n        break;\n        {\n            if (<recovery-expr>()) {\n                do {\n                    <recovery-expr>() = <recovery-expr>()->prev;\n                    if (<recovery-expr>()) {\n                        precedence2 = 3;\n                        break;\n                    }\n                    if (<recovery-expr>()) {\n                        precedence2 = 2;\n                        <recovery-expr>() = <recovery-expr>()->parent;\n                        break;\n                    }\n                } while (1);\n            } else {\n                precedence2 = 2;\n                <recovery-expr>() = <recovery-expr>()->parent;\n            }\n            if (<recovery-expr>()) {\n                precedence2 = 0;\n            } else\n                misc = 1;\n        }\n        break;\n        return (1);\n      default:\n        break;\n    }\n    if (misc) {\n        if (<recovery-expr>() == <recovery-expr>()) {\n            if (precedence1 == precedence2) {\n                while (<recovery-expr>())\n                    {\n                        if (<recovery-expr>())\n                            return (1);\n                        if (<recovery-expr>())\n                            return (-1);\n                    }\n                return (-1);\n            } else {\n                if (precedence1 < precedence2)\n                    return (1);\n                else\n                    return (-1);\n            }\n        }\n        if ((precedence2 == 3) && (precedence1 > 1)) {\n            while (<recovery-expr>())\n                {\n                    if (<recovery-expr>())\n                        return (1);\n                }\n        }\n        if ((precedence1 == 3) && (precedence2 > 1)) {\n            while (<recovery-expr>())\n                {\n                    if (<recovery-expr>())\n                        return (-1);\n                }\n        }\n    }\n    if (<recovery-expr>()) {\n        if (<recovery-expr>())\n            return (1);\n        if (<recovery-expr>())\n            return (-1);\n    }\n  turtle_comparison:\n    if (<recovery-expr>() == <recovery-expr>()->prev)\n        return (1);\n    if (<recovery-expr>() == <recovery-expr>()->next)\n        return (-1);\n    if (<recovery-expr>()) {\n        return (-2);\n    }\n    while (depth1 > depth2)\n        {\n            depth1--;\n            <recovery-expr>() = <recovery-expr>()->parent;\n        }\n    while (depth2 > depth1)\n        {\n            depth2--;\n            <recovery-expr>() = <recovery-expr>()->parent;\n        }\n    while (<recovery-expr>()->parent != <recovery-expr>()->parent)\n        {\n            <recovery-expr>() = <recovery-expr>()->parent;\n            <recovery-expr>() = <recovery-expr>()->parent;\n            if (<recovery-expr>())\n                return (-2);\n        }\n    if (<recovery-expr>() == <recovery-expr>()->prev)\n        return (1);\n    if (<recovery-expr>() == <recovery-expr>()->next)\n        return (-1);\n    if (<recovery-expr>()) {\n        if (<recovery-expr>())\n            return (1);\n        if (<recovery-expr>())\n            return (-1);\n    }\n    return (-1);\n}\n"
        }
    ],
    "total": 14,
    "visited": 1
}
